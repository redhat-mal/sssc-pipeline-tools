{{- if eq .Values.global.jenkins_enabled true }}
apiVersion: v1
kind: ImageStream
metadata:
  labels:
    build: {{ template "jenkins.name" . }}
    app: {{ template "jenkins.name" . }}
  name: {{ template "jenkins.name" . }}
  namespace: {{ .Values.global.namespace }}
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    build: {{ template "jenkins.name" . }}
    app: {{ template "jenkins.name" . }}
    type: "image"
  name: {{ template "jenkins.name" . }}
  namespace: {{ .Values.global.namespace }}
spec:
  failedBuildsHistoryLimit: 5
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: {{ template "jenkins.name" . }}:latest
  runPolicy: Serial
  source:
    git:
      ref: "{{ .Values.build.source_repository_ref }}"
      uri: "{{ .Values.build.source_repository_url }}"
    type: Git
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: "{{ .Values.build.from_image_name }}:latest"
        namespace: "{{ .Values.build.from_image_namespace }}"
    type: Source
  successfulBuildsHistoryLimit: 5
  triggers:
  - github:
      secret: uIdcKhhfsZWxMA4FEA5k
    type: GitHub
  - generic:
      secret: Iwvl9-Gr4oAq58MLX1cv
    type: Generic
  - type: ConfigChange
  - imageChange:
    type: ImageChange
---
apiVersion: v1
kind: ImageStream
metadata:
  labels:
    build: {{ .Values.agents.helm.name }}
    app: {{ .Values.agents.helm.name }}
    role: jenkins-slave
  name: {{ .Values.agents.helm.name }}
  namespace: {{ .Values.global.namespace }}
---
apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  labels:
    build: {{ .Values.agents.helm.name }}
    app: {{ .Values.agents.helm.name }}
    type: "image"
  name: {{ .Values.agents.helm.name }}
  namespace: {{ .Values.global.namespace }}
spec:
  failedBuildsHistoryLimit: 5
  output:
    to:
      kind: ImageStreamTag
      name: {{ .Values.agents.helm.name }}:latest
  runPolicy: Serial
  source:
    contextDir: "{{ .Values.agents.helm.source_context_dir }}"
    git:
      ref: "{{ .Values.agents.helm.source_repository_ref }}"
      uri: "{{ .Values.agents.helm.source_repository_url }}"
    type: Git
  strategy:
    dockerStrategy:
      from:
        kind: DockerImage
        name: {{ .Values.agents.helm.docker_image }}
      pullSecret:
        name: redhat-pull-secret
    type: Docker
  successfulBuildsHistoryLimit: 5
  triggers:
   - type: ConfigChange
   - github:
       secret: LMXvyKLfn3-MY0-GOi0B
       type: GitHub
   - generic:
       secret: pCIMGfFSMU2eLICEsGNI
       type: Generic
---
apiVersion: v1
kind: Secret
metadata:
  name: redhat-pull-secret
data:
  .dockerconfigjson: eyJhdXRocyI6eyJyZWdpc3RyeS5yZWRoYXQuaW8iOnsiYXV0aCI6Ik5UTXhPREl4TVh4MGMzTmpMV1JsYlc4dGJXdzZaWGxLYUdKSFkybFBhVXBUVlhwVmVFMXBTamt1WlhsS2VtUlhTV2xQYVVwc1QwZEZlazU2Um0xWlZFWnBUMFJuTUU1dFdtcFBSRmw2VDBkRmVGcEhVbXhPYWtFeFRXMUpkMDlEU2prdVpuQlFOVUoyWkRGNFZGSm9WVkJJUkVOclkweExMVmxPZFhSeWRHVm5TVVJNZWsxaFRsUlNSbU5XWlhsM1h5MDBZMnB4YjE5Zk9HSlBWVFp2TkRWc1dIbElhMDVpTWxodU1YTmtlakpHZUV0ck5Xa3dTblJYVFdKelFrb3dSV05KYTI5V2NXVnhVbXBDY0dGUFEycG5aWE5QVUUxeGVEWjRUV2cxWWs1NU5sbG9jbWRNTlRSd1JubGtjRlZoUm14MExXUkNiWHB5ZFhaS1JqbG5WbFJJWjBSS2FuaEhPSGt3UTB4M2VGTlFNbmh3YTNoaFV5MDVXakpFYzFOak5GSnNSRVJSUnpRNFYwNDNUbVV3TkRkMGJHcHRaRmR2TUdKMFkxbFNjRXQxYVZoelNuVlZlVmg0TjFsM1ppMWtUa3R0VjBSdlZtVndVa1ZPYW0xaloyWndZbGd6TmpoRlVFbFhORVZDVEZrek9GSmhVMnBNY25oM1RGVjRSbmhEV0ZONVdXY3RjbFJhV0dkUlRuVnRSSE5FZDBnNWExRnpYMGhJUzNVelFXOWhiMFpqTkUwelRsWTFUMGRVU3pSSVFsRTVXREZGVTNKQmRWRkZOVmxLWVZGUmFGaFNUa1oxYTBOemJIaGxkREptUmxGS1owaENhVWMyZVhwZlNsOWxjMFpUUVZsSVlVY3pYMmhCYm1sWWFIWmxRV1F4VFV4M1dWTlZPVlpXVWs5UWFHeGhhakY1ZW1ORmRFaFBXR1JRVkU5SVpsVmxaMjl2VGxWS1IwMUtSRVJOUkZWbk5uaHpaRkpsWmt4M2MzZEtjbkZQTnpVelRGWndlbmhxVERkb1dsUlhZMmxKZUZsWlgySjZhbmxEZVVWQk0ySlVPR0pqUkVoYVMyeHljbFpYYkZoeFNqWXlUV2hmTUZZeGRteERiVGd3WmpsNE9XcEpabGhEZVVaRE1GQlZialJpY0VkTGExUkpNa1pqWWxGNFFYbEdia2hJTTJSSGRVSnRiRlpDWkZSRk9YSlNhWEp1VVdwRU5tbFljRkZKTWxwZllscFRXa0l4V2pKVFlYTjRWblJuWjBNdFRuQmxla1JLWlhsNmVVcEVWRTVpZVZSNVExaHRiV0pvT0dkdmRUWjRaRGt5Tm5oQmRUVnlWRGs0VEZkNmFsRnJPRVJGU21oRWEwZDNjMlpGYjNCa2VsVmtkRTlGT0VrPSJ9fX0=
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
kind: BuildConfig
metadata:
  annotations:
    pipeline.alpha.openshift.io/uses: '[{"name": "jenkins", "namespace": "", "kind": "BuildConfig"}]'
  labels:
    app: {{ .Values.post_config.pipeline.name  }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  name: {{ .Values.post_config.pipeline.name  }}
  namespace: {{ .Values.global.namespace }}
spec:
  source:
    type: Git
    git:
      uri: {{ .Values.post_config.pipeline.source_repo_url }}
      ref: {{ .Values.post_config.pipeline.source_repo_ref }}
    contextDir: {{ .Values.post_config.pipeline.source_context_dir }}
  runPolicy: Serial
  strategy:
    type: "JenkinsPipeline"
    jenkinsPipelineStrategy:
      jenkinsfilePath: {{ .Values.post_config.pipeline.file_name }}
      env:
      - name: "TOOLS_NAMESPACE"
        value: "{{ .Values.global.namespace }}"
      - name: "ANCHORE_ENABLED"
        value: "{{ .Values.global.anchore_enabled }}"
      - name: "NEXUS_ENABLED"
        value: "{{ .Values.global.nexus_enabled }}"
{{- end }}