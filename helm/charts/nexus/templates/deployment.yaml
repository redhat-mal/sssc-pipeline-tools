{{- if eq .Values.global.nexus_enabled true }}
---
{{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) -}}
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: "{{ template "nexus.name" . }}"
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: "{{ .Values.persistence.capacity }}"
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "nexus.name" . }}"
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ template "nexus.name" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "nexus.name" . }}
      release: "{{ .Release.Name }}"
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: "{{ template "nexus.name" . }}"
        release: "{{ .Release.Name }}"
      name: "{{ template "nexus.name" . }}"
    spec:
      containers:
      - image: "sonatype/nexus3:3.7.1"
        imagePullPolicy: Always
        name: "{{ template "nexus.name" . }}"
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 20
        livenessProbe:
          failureThreshold: 30
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 420
          timeoutSeconds: 3
        ports:
        - containerPort: 8081
          protocol: TCP
        - containerPort: 5000
          protocol: TCP
        resources:
          limits:
            memory: {{.Values.memory_limit }}
          requests:
            memory: 256Mi
        terminationMessagePath: "/dev/termination-log"
        volumeMounts:
        - mountPath: "/nexus-data"
          name: "{{ template "nexus.name" . }}"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: "{{ template "nexus.name" . }}"
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: "{{ template "nexus.name" . }}"
      {{- else }}
        emptyDir: {}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: "{{ template "nexus.name" . }}"
    app: "{{ template "nexus.name" . }}"
  name: "{{ template "nexus.name" . }}"
  namespace: {{ .Values.global.namespace }}
spec:
  ports:
  - port: 8081
    protocol: TCP
    targetPort: 8081
    name: nexus
  - port: 5000
    protocol: TCP
    targetPort: 5000
    name: repo-port
  selector:
    release: "{{ .Release.Name }}"
    app: {{ template "nexus.name" . }}
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    name: "{{ template "nexus.name" . }}"
    app: "{{ template "nexus.name" . }}"
  name: "{{ template "nexus.name" . }}"
  namespace: {{ .Values.global.namespace }}
spec:
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  port:
    targetPort: 8081
  to:
    kind: Service
    name: "{{ template "nexus.name" . }}"
    weight: 100
  wildcardPolicy: None
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    name: "{{ template "nexus.name" . }}-docker"
    app: "{{ template "nexus.name" . }}"
  name: "{{ template "nexus.name" . }}-docker"
  namespace: {{ .Values.global.namespace }}
spec:
  host: "{{ .Values.nexus_repo_prefix }}.{{ .Values.global.cluster_url }}"
  to:
    kind: Service
    name: nexus
  port:
    targetPort: 5000
  tls:
    termination: edge
---
{{ $dockerSecret := printf "{\"auths\":{\"%s.%s\":{\"username\":\"%s\",\"password\":\"%s\",\"email\":\"tssc@redhat.com\"}}}"  .Values.nexus_repo_prefix .Values.global.cluster_url .Values.global.nexus_user .Values.global.nexus_password }}
apiVersion: v1
data:
   .dockerconfigjson: "{{ b64enc $dockerSecret }}"  
kind: Secret
metadata:
  name: nexus-repo
  namespace: {{ .Values.global.namespace }}
type: kubernetes.io/dockerconfigjson
{{- end }}        



